+ Queries 

Escribe una función find() para mostrar todos los documentos de la colección de restaurantes.
#+begin_src js
db.restaurants.find()
#+end_src

Escribe una función find() para mostrar los campos restaurant_id, nombre, municipio y cocina para todos los documentos en el restaurante de la colección.
#+begin_src js
db.restaurants.find({},{"restaurant_id":1,"name":1, "borough":1, "cuisine":1})
#+end_src

Escribe una función find() para mostrar los campos restaurant_id, nombre, municipio y cocina, pero excluya el campo \_id para todos los documentos de la colección restaurant.
#+begin_src js
db.restaurants.find({},{"restaurant_id":1,"name":1, "borough":1, "cuisine":1, "_id":0})
#+end_src

Escribe una función find() para mostrar los campos restaurant_id, nombre, municipio y código postal, pero excluya el campo \_id para todos los documentos de la colección restaurant.
#+begin_src js
db.restaurants.find({},{"restaurant_id":1,"name":1, "borough":1, "address.zipcode":1, "_id":0})
#+end_src

Escribe una función find() para mostrar todos los restaurantes que se encuentran en el distrito del Bronx.
#+begin_src js
db.restaurants.find({"borough":"Bronx"})
#+end_src

Escribe una función find() para mostrar los primeros 5 restaurantes que se encuentran en el condado del Bronx.
#+begin_src js
db.restaurants.find({"borough":"Bronx"}).limit(5)
#+end_src

Escribe una función find() para mostrar los siguientes 5 restaurantes después de omitir los primeros 5 que se encuentran en el condado del Bronx.
#+begin_src js
db.restaurants.find({"borough":"Bronx"}).skip(5).limit(5)
#+end_src

Escribe una función find() para encontrar los restaurantes que obtuvieron una puntuación de más de 90.
#+begin_src js
db.restaurants.find({"grades.score": {$gt: 90}}, {"grades.score":1})
#+end_src

Escribe una función find() para encontrar los restaurantes que obtuvieron una puntuación, más de 80 pero menos de 100.
#+begin_src js
db.restaurants.find({"grades": {$elemMatch: {"score":{$gt: 80, $lt: 100}}}}, {"grades.score":1})     
#+end_src

Escribe una función find() para encontrar los restaurantes que se ubican en un valor de latitud menor que -95.754168.
#+begin_src js
db.restaurants.find({"address.coord.0": {$lt: -95.754168}}, {"address.coord":1})
#+end_src

Escribe una función find() para encontrar los restaurantes que no preparan ningún tipo de cocina de ‘estadounidense’ y su puntuación de calificación es superior a 70 y latitud inferior a -65.754168.
#+begin_src js
db.restaurants.find({"cuisine":{$ne: "American "}, "address.coord.0":{$lt: -65.754168}, "grades.score": {$gt: 70}},{"cuisine":1,"grades":1, "address.coord":1})
#+end_src

Escribe una función find() para encontrar los restaurantes que no preparan ninguna cocina del continente americano y obtuvieron una calificación de ‘A’ que no pertenece al distrito de Brooklyn. El documento debe mostrarse según la cocina en orden descendente.
#+begin_src js
db.restaurants.find({"cuisine":{$nin:["American ", "Peruvian", "Mexican", "Brazilian", "Latin (Cuban, Dominican, Puerto Rican, South & Central American)"]}, "address.coord.0":{$lt: -65.754168},"grades.score": {$gt: 70}},{"cuisine":1})
#+end_src

Escribe una función find() para encontrar el ID del restaurante, el nombre, el municipio y la cocina de aquellos restaurantes que contienen ‘Wil’ como las primeras tres letras de su nombre.
#+begin_src js
db.restaurants.find({"name":/^Wil/},{"name":1, "borough":1, "cuisine":1});
#+end_src

Escribe una función find() para encontrar el ID del restaurante, el nombre, el municipio y la cocina de aquellos restaurantes que contienen “ces” como las últimas tres letras de su nombre.
#+begin_src js
db.restaurants.find({"name":/ces$/},{"name":1, "borough":1, "cuisine":1});
#+end_src

Escribe una función find() para encontrar el ID del restaurante, el nombre, el municipio y la cocina de aquellos restaurantes que contienen ‘Reg’ como tres letras en algún lugar de su nombre.
#+begin_src js
db.restaurants.find({"name":/(R|r)eg/},{"name":1, "borough":1, "cuisine":1});
#+end_src

Escribe una función find() para encontrar los restaurantes que pertenecen al municipio del Bronx y que prepararon platos estadounidenses o chinos.
#+begin_src js
db.restaurants.find({"borough":"Bronx", "cuisine":{$in:["Chinese", "American "]}}, {"name": 1, "borough": 1, "cuisine":1});
#+end_src

Escribe una función find() para encontrar la identificación del restaurante, el nombre, el municipio y la cocina de los restaurantes que pertenecen al municipio de Staten Island o Queens o Bronxor Brooklyn.
#+begin_src js
db.restaurants.find({"borough":{$in:["Staten Island", "Queens", "Bronx", "Brooklyn"]}}, {"name": 1, "borough": 1, "cuisine":1});
#+end_src

Escribe una función find() para encontrar el ID del restaurante, el nombre, el municipio y la cocina de aquellos restaurantes que obtuvieron una puntuación que no sea superior a 10.
#+begin_src js
db.restaurants.find({"grades.score": {$not: {$gt:10}}}, 
{"name": 1, "borough": 1, "cuisine":1});

db.restaurants.find({"grades.score": {$lte:10}}, 
{"name": 1, "borough": 1, "cuisine":1});
#+end_src

Escribe una función find() para encontrar el ID del restaurante, el nombre, el municipio y la cocina de aquellos restaurantes que prepararon platos excepto ‘Americano’ y ‘Chinese’ o el nombre del restaurante comienza con la letra ‘Wil’.
#+begin_src js
db.restaurants.find( {$or:[ {"cuisine": {$nin:["American ", "Chinese"] } }, {"name": /^Wil/} ] }, 
{"name": 1, "borough": 1, "cuisine":1});
#+end_src

Escribe una función find() para encontrar el ID del restaurante, el nombre y las calificaciones de los restaurantes que obtuvieron una calificación de “A” y obtuvieron una puntuación de 11 en un ISODate “2014-08-11T00: 00: 00Z” entre muchas de las fechas de la encuesta.
#+begin_src js
db.restaurants.find( {"grades.grade":"A", "grades.score":11, "grades.date":ISODate("2014-08-11T00:00:00Z")}, 
{"name": 1, "grades": 1});
#+end_src

Escribe una función find() para encontrar el ID del restaurante, el nombre y las calificaciones de aquellos restaurantes donde el segundo elemento de la matriz de calificaciones contiene una calificación de “A” y una puntuación de 9 en un ISODate “2014-08-11T00: 00: 00Z”.
#+begin_src js
db.restaurants.find( {"grades.1.grade":"A", "grades.1.score":9, "grades.1.date":ISODate("2014-08-11T00:00:00Z")}, 
{"name": 1, "grades": 1});
#+end_src

Escribe una función find() para encontrar el ID del restaurante, el nombre, la dirección y la ubicación geográfica para aquellos restaurantes donde el segundo elemento de la matriz de coordenadas contiene un valor que sea más de 42 y hasta 52.
#+begin_src js
db.restaurants.find( {"address.coord.1": {$gt: 42, $lt: 52}}, {"name": 1, "address": 1}); 
#+end_src

Escribe una función find() para organizar el nombre de los restaurantes en orden ascendente junto con todas las columnas.
